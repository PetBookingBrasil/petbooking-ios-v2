//
//  SignupViewController.swift
//  petbooking-ios-v2
//
//  Created Ryniere S Silva on 29/04/17.
//  Copyright © 2017 Pet Booking Serviços e Desenvolvimento de Softwares SA. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import PINRemoteImage

class SignupViewController: UIViewController, SignupViewProtocol {

	
	@IBOutlet weak var profilePictureView: UIView!
	@IBOutlet weak var profilePictureImageView: UIImageView!
	@IBOutlet weak var profilePictureFrameView: UIView!
	@IBOutlet weak var fullNameTextField: UITextField!
	@IBOutlet weak var cpfTextField: UITextField!
	@IBOutlet weak var birthdayTextField: UITextField!
	@IBOutlet weak var passwordTextField: UITextField!
	@IBOutlet weak var confirmPasswordTextField: UITextField!
	@IBOutlet weak var emailTextField: UITextField!
	@IBOutlet weak var mobileNumberTextField: UITextField!
	@IBOutlet weak var numberTextField: UITextField!
	@IBOutlet weak var cityTextField: UITextField!
	@IBOutlet weak var neighborhoodTextField: UITextField!
	@IBOutlet weak var zipcodeTextField: UITextField!
	@IBOutlet weak var stateTextField: UITextField!
	@IBOutlet weak var streetTextField: UITextField!
	@IBOutlet weak var saveButton: UIButton!
	
	var presenter: SignupPresenterProtocol?

	override func viewDidLoad() {
        super.viewDidLoad()
		
		self.navigationController?.isNavigationBarHidden = false
		self.title = "Preencha os seus dados"
		hideKeyboardWhenTappedAround()
				setupView()
    }
	
	override func viewWillAppear(_ animated: Bool) {
		super.viewWillAppear(animated)
		
		presenter?.fillFields()
	}
	
	func setupView() {
		profilePictureView.round()
		profilePictureFrameView.setBorder(width: 2, color: .white)
		profilePictureFrameView.round()
		saveButton.round()
	}

	@IBAction func changeAvatar(_ sender: Any) {
		
		if UIImagePickerController.isSourceTypeAvailable(.savedPhotosAlbum){
			
			 let imagePicker = UIImagePickerController()
			
			imagePicker.delegate = self
			imagePicker.sourceType = .savedPhotosAlbum;
			imagePicker.allowsEditing = false
			
			self.present(imagePicker, animated: true, completion: nil)
		}
		
	}
	
	@IBAction func save(_ sender: Any) {
		
		guard let name = fullNameTextField.text else {
			return
		}
		
		guard let cpf = cpfTextField.text else {
			return
		}
		
		guard let birthday = birthdayTextField.text else {
			return
		}
		
		guard let email = emailTextField.text else {
			return
		}
		
		guard let mobile = mobileNumberTextField.text else {
			return
		}
		
		guard let zipcode = zipcodeTextField.text else {
			return
		}
		
		guard let street = streetTextField.text else {
			return
		}
		
		guard let streetNumber = numberTextField.text else {
			return
		}
		
		guard let neighborhood = neighborhoodTextField.text else {
			return
		}
		
		guard let city = cityTextField.text else {
			return
		}
		
		guard let state = stateTextField.text else {
			return
		}
		
		guard let password = passwordTextField.text else {
			return
		}
		
		guard let confirmPassword = confirmPasswordTextField.text else {
			return
		}
		
		if password != confirmPassword {
			return
		}
		
		guard let image = profilePictureImageView.image else {
			return
		}
		
		guard let base64Avatar = image.toBase64String() else {
			return
		}
		
		
		presenter?.createUser(name: name, cpf: cpf, birthday: birthday, email: email, mobile: mobile, zipcode: zipcode, street: street, streetNumber: streetNumber, neighborhood: neighborhood, city: city, state: state, password: password, avatar:"data:image/jpeg;base64,\(base64Avatar)")
	}
	
	func setProfileImageView(urlString:String) {
		
		if let url = URL(string: urlString) {
			profilePictureImageView.pin_setImage(from: url)
		}
		
	}
	
	func setNameLabel(name:String) {
		
		fullNameTextField.text = name
	}
	
	func setEmail(email:String) {
		
		emailTextField.text = email
	}
	
	func fillAdrressFields(street:String, neighborhood:String, city:String, state:String) {
		
		streetTextField.text = street
		neighborhoodTextField.text = neighborhood
		cityTextField.text = city
		stateTextField.text = state
		
	}
	
	
}

extension SignupViewController:UITextFieldDelegate {
	
	func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
		
		switch textField {
		case zipcodeTextField:
			break
		case stateTextField:
			guard let text = textField.text else {
				return true
			}
			if text.characters.count >= 2 && !string.isEmpty || string.characters.count > 2{
				return false
			}
			break
			
		default:
			break
		}
		
		return true
	}
	
	func textFieldDidEndEditing(_ textField: UITextField) {
		switch textField {
		case zipcodeTextField:
			guard let zipcode = textField.text else {
				return
			}
			presenter?.fillAdrressWithZipcode(zipcode: zipcode)
			break
			case stateTextField:
				textField.text = textField.text?.uppercased()
			break
			
		default:
			break
		}
	}
}

extension SignupViewController:UIImagePickerControllerDelegate, UINavigationControllerDelegate {
	
	func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {
		if let image = info[UIImagePickerControllerOriginalImage] as? UIImage {
			profilePictureImageView.image = image
		}
		
		picker.dismiss(animated: true, completion: nil);
	}
	
}
