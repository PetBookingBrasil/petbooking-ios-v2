//
//  SignupInteractor.swift
//  petbooking-ios-v2
//
//  Created Ryniere S Silva on 29/04/17.
//  Copyright © 2017 Pet Booking Serviços e Desenvolvimento de Softwares SA. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import FacebookCore
import Mantle

enum SignupType {
    case email, facebook, editProfile, editFacebook
}

class SignupInteractor: SignupInteractorProtocol {
    
    var signupType: SignupType?
    
    weak var presenter: SignupPresenterProtocol?
    
    func fillFields() {
        
        switch signupType! {
        case .facebook:
            let connection = GraphRequestConnection()
            connection.add(GraphRequest(graphPath: "/me", parameters:["fields": "id, name, email, picture"])) { (httpResponse, result) in
                switch result {
                case .success(let response):
                    if let dic = response.dictionaryValue {
                        do {
                            let facebookGraph = try MTLJSONAdapter.model(of: FacebookGraphModel.self, fromJSONDictionary: dic) as! FacebookGraphModel
                            
                            self.presenter?.setProfileImageView(withUrlString: facebookGraph.profileUrl)
                            self.presenter?.setName(facebookGraph.name)
                            self.presenter?.setEmail(facebookGraph.email)
                            
                        } catch { }
                    }
                case .failed(let error):
                    print("Graph Request Failed: \(error)")
                }
            }
            
            connection.start()
            
        case .editProfile:
            guard let user = UserManager.sharedInstance.getCurrentUser() else { return }
            
            self.presenter?.setProfileImageView(withUrlString: user.avatarUrlLarge)
            self.presenter?.setName(user.name)
            self.presenter?.setEmail(user.email)
            self.presenter?.setMobile(user.phone)
            
        default:
            break
        }
    }
    
    func createUser(name: String, email: String, mobile: String, password: String, avatar: String?) {
        var provider = "b2beauty"
        var providerToken = ""
        
        if signupType == .facebook {
            if let token = AccessToken.current?.authenticationToken {
                provider = "facebook"
                providerToken = token
            }
        }
        
        if signupType == .editProfile {
            guard let avatar = avatar else { return }
            
            PetbookingAPI.sharedInstance.updateUser(name: name, email: email, mobile: mobile, avatar: avatar) { (success, message) in
                if success {
                    self.presenter?.updatedUserWithSuccess()
                } else {
                    self.presenter?.createUserWithError()
                }
            }
        } else {
            PetbookingAPI.sharedInstance.createUser(name: name, email: email, mobile: mobile, password: password, provider: provider, providerToken: providerToken, avatar: avatar) { (success, message) in
                if success {
                    self.presenter?.createUserWithSuccess()
                } else {
                    self.presenter?.createUserWithError()
                }
            }
        }
    }
    
    internal func saveAccessType() {
        if self.signupType == .facebook {
            UserDefaults.didSetFacebookLogin()
        } else {
            UserDefaults.didSetNormalLogin()
        }
    }
}
