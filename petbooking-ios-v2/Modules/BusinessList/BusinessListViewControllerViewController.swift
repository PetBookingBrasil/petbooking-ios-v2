//
//  BusinessListViewControllerViewController.swift
//  petbooking-ios-v2
//
//  Created Ryniere S Silva on 20/06/17.
//  Copyright Â© 2017 Pet Booking ServiÃ§os e Desenvolvimento de Softwares SA. All rights reserved.
//
//  Template generated by Juanpe CatalÃ¡n @JuanpeCMiOS
//

import UIKit
import CoreLocation

class BusinessListViewControllerViewController: UIViewController, BusinessListViewControllerViewProtocol {
	
	@IBOutlet weak var tableView: UITableView!
	
	var presenter: BusinessListViewControllerPresenterProtocol?
	var locationManager:CLLocationManager?
	var businessList:BusinessList?
	var businesses = [Business]()
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		locationManager = CLLocationManager()
		
		locationManager?.delegate = self
		
		// Ask for Authorisation from the User.
		self.locationManager?.requestAlwaysAuthorization()
		
		// For use in foreground
		self.locationManager?.requestWhenInUseAuthorization()
		
		if CLLocationManager.locationServicesEnabled() {
			locationManager?.delegate = self
			locationManager?.desiredAccuracy = kCLLocationAccuracyNearestTenMeters
			locationManager?.startUpdatingLocation()
		}
		
		tableView.register(UINib(nibName: "BusinessTableViewCell", bundle: nil), forCellReuseIdentifier: "cell")
		tableView.rowHeight = UITableViewAutomaticDimension
		tableView.estimatedRowHeight = 2000
		
	}
	
	override func viewDidAppear(_ animated: Bool) {
		super.viewDidAppear(animated)
		
		
	}
	
	func updateBusinessList(businessList:BusinessList) {
		
		self.businessList = businessList
		
		businesses = businessList.businesses
		
		tableView.reloadData()
		
	}
	
}

extension BusinessListViewControllerViewController: CLLocationManagerDelegate {
	
	
	func locationManager(_ manager: CLLocationManager, didFailWithError error: Error)
	{
		locationManager?.stopUpdatingLocation()
		
		print(error)
	}
	
	func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation])
	{
		locationManager?.stopUpdatingLocation()
		
		let locationArray = locations as NSArray
		let locationObj = locationArray.lastObject as! CLLocation
		let coord = locationObj.coordinate
		print(coord.latitude)
		print(coord.longitude)
		
		presenter?.getBusinessByCoordinates(coordinates: coord)
		
	}
	
}

extension BusinessListViewControllerViewController: UITableViewDelegate, UITableViewDataSource {
	
	func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
		
		return businesses.count
	}
	
	
	
	func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
		
		let cell = tableView.dequeueReusableCell(withIdentifier: "cell") as! BusinessTableViewCell
		
		let business = businesses[indexPath.row]
		
		cell.nameLabel.text = business.name
		
		return cell
	}
	
	public func numberOfSections(in tableView: UITableView) -> Int {
		return 1
	}
	
	
}
