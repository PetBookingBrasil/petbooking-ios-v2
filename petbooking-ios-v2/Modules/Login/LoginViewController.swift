//
//  LoginViewController.swift
//  petbooking-ios-v2
//
//  Created Ryniere S Silva on 28/04/17.
//  Copyright © 2017 Pet Booking Serviços e Desenvolvimento de Softwares SA. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LoginViewController: UIViewController, LoginViewProtocol {

	@IBOutlet weak var loginButton: UIButton!
	@IBOutlet weak var signupButton: UIButton!
	@IBOutlet weak var facebookLoginButton: UIButton!
	@IBOutlet weak var forgotPasswordButton: UIButton!
	@IBOutlet weak var emailTextField: UITextField!
	@IBOutlet weak var passwordTextField: UITextField!
	
	var presenter: LoginPresenterProtocol?

	override func viewDidLoad() {
		super.viewDidLoad()
        
		hideKeyboardWhenTappedAround()
        
        setupButtons()
    }
	
	override func viewWillAppear(_ animated: Bool) {
		super.viewWillAppear(animated)
        
		self.navigationController?.isNavigationBarHidden = true
	}
	
	func setupButtons() {
		loginButton.round()
		signupButton.round()
		facebookLoginButton.round()
		facebookLoginButton.setSubTextTitleFont("Facebook", font: UIFont.robotoBold(ofSize: 16), controlState: .normal)
		signupButton.setBorder(width: 2, color: .white)
		
		let attributes: [NSAttributedStringKey: Any] = [NSAttributedStringKey.font: UIFont.robotoRegular(ofSize: 16),
                                                        NSAttributedStringKey.foregroundColor: UIColor.white,
                                                        NSAttributedStringKey.underlineStyle: NSUnderlineStyle.styleSingle.rawValue]
        let attributeString = NSMutableAttributedString(string: NSLocalizedString("forgot_passowrd", comment: ""),
                                                            attributes: attributes)
		forgotPasswordButton.setAttributedTitle(attributeString, for: .normal)
	}

	@IBAction func login(_ sender: Any) {
		guard let email = emailTextField.text, !email.isEmpty else {
			MIBlurPopup.show(AlertPopupRouter.createModule(title: "E-mail obrigatório", message: "O campo e-mail não pode ficar vazio."), on: self)
			return
		}
				
		if !email.isEmail {
			MIBlurPopup.show(AlertPopupRouter.createModule(title: "E-mail inválido", message: "Insira seu e-mail no formato nome@domínio.com."), on: self)
			return
		}
		
		guard let password = passwordTextField.text else { return }
        
		if password.isEmpty {
			MIBlurPopup.show(AlertPopupRouter.createModule(title: "Senha obrigatória", message: "O campo senha não pode ficar vazio."), on: self)
			return
		}
		
		presenter?.didTapLoginButton(email: email, password: password)
	}
	
	@IBAction func facebookLogin(_ sender: Any) {
		presenter?.didTapFacebookLoginButton()
	}
	
	@IBAction func signup(_ sender: Any) {
		presenter?.didTapSignupButton()
	}
	
	@IBAction func forgotPassword(_ sender: Any) {
		presenter?.didTapForgotPasswordButton()
	}
	
	func didCompleteFacebookLoginWithError(error: Error?) { }
	
	func didCompleteLoginWithError(error: Error?) {
		MIBlurPopup.show(AlertPopupRouter.createModule(title: "Login incorreto", message: "E-mail/Senha não correspondem"), on: self)
	}
}
